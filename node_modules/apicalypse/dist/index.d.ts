import type { AxiosInstance, AxiosRequestConfig, AxiosResponse } from "axios";
import Builder from "./builder.js";
export interface ApicalypseConfig extends Omit<AxiosRequestConfig, 'url'> {
    queryMethod?: "body" | "url";
    apicalypse?: string;
    data?: any;
    axiosInstance?: AxiosInstance;
    url?: string;
}
export interface RequestAllOptions {
    concurrency?: number;
    delay?: number;
}
declare class Apicalypse extends Builder {
    private config;
    private initialApicalypse;
    constructor(opts: ApicalypseConfig);
    constructOptions(url?: string): AxiosRequestConfig;
    request(url?: string): Promise<AxiosResponse>;
    resetRequest(): void;
    cleanLimitOffset(): {
        limit: number;
        offset: number;
    };
    requestAll(url?: string, opts?: RequestAllOptions): Promise<any[]>;
}
export default function (apicalypse?: string | ApicalypseConfig, opts?: ApicalypseConfig): Apicalypse;
export {};
